from AWSIoTPythonSDK.MQTTLib import AWSIoTMQTTClient
import paho.mqtt.client as mqtt
import json
import signal

def on_message(_client, _userdata, message):

    payload = json.loads(message.payload)
    
    topic = MQTT_PUB_TOPIC

    success = myMQTTClient.publish(topic, json_payload, 0)

    time.sleep(5)
    if(success):
        print("published",json_payload)

    
# On connect subscribe to topic
def on_connect(_client, _userdata, _flags, result):
    """Subscribe to input topic"""

    myMQTTClient.publish(MQTT_PUB_TOPIC, "Connection", 0)
    print("Connection Done")

    MQTT_CLIENT.subscribe(MQTT_SUB_TOPIC)
    print('Subscribed to ' + MQTT_SUB_TOPIC)

# Disconnect function
def disconnect_clients(signum, frame):
    MQTT_CLIENT.loop_stop()
    MQTT_CLIENT.disconnect()
    myMQTTClient.disconnect()
    print("Disconntection")
    exit(0)

signal.signal(signal.SIGINT, disconnect_clients)

MQTT_BROKER_ADDR = "YOUR IP ADDRES"
MQTT_BROKER_PORT = 1883
MQTT_BROKER_CLIENT_ID = "broker"
AWS_IOT_ENDPOINT ="YOUR AWS_IOT_ENDPOINT"
AWS_IOT_PORT = 8883
AWS_IOT_CLIENT_ID = "basicPubSub"
AWS_IOT_ROOT_CA = "YOUR AWS_IOT_ROOT_CA"
AWS_IOT_PRIVATE_KEY = "YOUR AWS_IOT_PRIVATE_KEY"
AWS_IOT_CERTIFICATE = "YOYR AWS_IOT_CERTIFICATE"

# For certificate based connection
myMQTTClient = AWSIoTMQTTClient(AWS_IOT_CLIENT_ID)
myMQTTClient.configureEndpoint(AWS_IOT_ENDPOINT, 8883)
myMQTTClient.configureCredentials(AWS_IOT_ROOT_CA, AWS_IOT_PRIVATE_KEY, AWS_IOT_CERTIFICATE)
myMQTTClient.configureOfflinePublishQueueing(-1)
myMQTTClient.configureDrainingFrequency(2)
myMQTTClient.configureConnectDisconnectTimeout(10)
myMQTTClient.configureMQTTOperationTimeout(5)
MQTT_SUB_TOPIC = "YOUR MQTT_SUB_TOPIC"
MQTT_PUB_TOPIC = "YOUR MQTT_PUB_TOPIC"
MQTT_CLIENT = mqtt.Client(client_id=MQTT_BROKER_CLIENT_ID)

# MQTT callback function
def main():
    MQTT_CLIENT.on_connect = on_connect
    MQTT_CLIENT.on_message = on_message
    MQTT_CLIENT.connect(MQTT_BROKER_ADDR, MQTT_BROKER_PORT)
    myMQTTClient.connect()
    MQTT_CLIENT.loop_forever() #
